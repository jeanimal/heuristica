% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregators.R
\name{aggregatePredictPair}
\alias{aggregatePredictPair}
\title{Predicts with heuristics and criterion, returning all row pairs.}
\usage{
aggregatePredictPair(fitted_heuristic_list, test_data, goal_type, ...)
}
\arguments{
\item{fitted_heuristic_list}{A list of heuristics already fitted to data,
e.g. ttbModel.}

\item{test_data}{Data to try to predict; must match columns in fit.}

\item{goal_type}{String identifying the goal of the models and criterion.
'CorrectGreater' indicates to use correctGreater and predictPairInternal.
'ProbGreater' indicates to use probGreater and predictProbInternal.}

\item{...}{Optionally additional row pair functions, e.g. rowIndexes().}
}
\value{
A one-row matrix of numbers from 0 to 1, meaning proportion
  correct.  Each column is named with the heuristic's class.
}
\description{
Predicts with heuristics and criterion, returning all row pairs.
}
\examples{
ttb <- ttbModel(city_population, 3, c(4:ncol(city_population)))
reg <- regModel(city_population, 3, c(4:ncol(city_population)))
# Which row pairs is ttb better on?  By "better" we mean chooses the
# correct larger row-- that's our goal_type.
goal_type <- 'CorrectGreater'
out <- aggregatePredictPair(list(ttb, reg), city_population, goal_type,
  rowIndexes())
out_df <- data.frame(out)
head(out_df[out_df$ttbModel > out_df$regModel,])
# So one example where ttb was right and reg was wrong was row 4 vs.
# row 7.  Let's put some city names on this.
out_df$Row1_City <- city_population$Name_of_City[out_df$Row1]
out_df$Row2_City <- city_population$Name_of_City[out_df$Row2]
head(out_df[out_df$ttbModel > out_df$regModel,])
# So row 4 vs. 7 was Cologne vs. Dortmund.  Looking through the list,
# this is the only time Cologne appeared.  In contrast, Halle appears
# 7 times, so it's a tougher city for regression to predict than ttb.
}

