% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heuristic_classes.R
\name{singleCueModel}
\alias{singleCueModel}
\title{Single Cue Model}
\usage{
singleCueModel(train_data, criterion_col, cols_to_fit, reverse_cues = TRUE)
}
\arguments{
\item{train_data}{Training/fitting data as a matrix or data.frame.}

\item{criterion_col}{The index of the colum in train_data that has the criterion.}

\item{cols_to_fit}{A vector of column indices in train_data, used to fit the criterion.}

\item{reverse_cues}{Optional parameter to reverse cues as needed.  By default, 
the model will reverse the cue values for cues with cue validity < 0.5, so a cue
with validity 0 becomes a cue with validity 1.
Set this to FALSE if you do not want that, i.e. the cue stays validity 0.}
}
\description{
Create a single cue model by specifying columns and a dataset.  It sorts cues in order of cueValidity and uses the cue with the highest cueValidity. If the cue does not discriminate it guesses randomly.
}
\examples{
##Fit column (5,4) to column (1,0), having validity 1.0, and column (0,1), validity 0.
singlecue <- singleCueModel(matrix(c(5,4,1,0,0,1), 2, 3), 1, c(2,3))
predictPair(singlecue, matrix(c(5,4,1,0,0,1), 2, 3)) 
}
\seealso{
\code{\link{predictPair.singleCueModel}} (via \code{\link{predictPair}}) for prediction.


}

