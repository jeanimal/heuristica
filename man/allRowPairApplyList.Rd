% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/row_pair_apply.R
\name{allRowPairApplyList}
\alias{allRowPairApplyList}
\title{Apply functions to all row pairs.}
\usage{
allRowPairApplyList(test_data, function_creator_list)
}
\arguments{
\item{test_data}{The data to apply the functions to as a matrix or
data.frame.  Heuristics must have already been fitted to trying data and
must include the same criterion_col and cols_to_fit.}

\item{function_creator_list}{List of the objects that generate the functions
to apply, using createFunction.  For example,
 list(heuristics(ttb, reg), probGreater(col), rowIndexes()).}
}
\value{
A matrix of outputs from the functions.  The number of rows is based
  on the number of row pairs in test_data.  If the input has N rows, the
  output will have N x (N-1) rows.  The number of columns will be at least
  the number of functions but may be more as some functions may output more
  than one column.
}
\description{
Apply functions like heuristic predictions to all row pairs in a matrix
or data.frame.
}
\examples{
## Fit two models to the city_population data set.
ttb <- ttbModel(city_population, 3, c(4:ncol(city_population)))
reg <- regInterceptModel(city_population, 3, c(4:ncol(city_population)))

## Generate predictions for all row pairs for these two models:
out1 <- allRowPairApplyList(city_population, list(heuristics(ttb, reg)))
head(out1)
nrow(out1)
## returns a matrix of 2 columns, named ttbModel and regModel

## Generate a matrix with the correct values and the heuristics'
## predictions:
out2 <- allRowPairApplyList(city_population,
                            list(probGreater(3), heuristics(reg, ttb)))
head(out2)
nrow(out2)
## returns a matrix of 3 columns, ProbGreater, ttbModel and regModel

}
\seealso{
\code{\link{createFunction}} which must be implemented by the objects
   passed in the "..." argument, along with the attribute $column_names.

\code{\link{predictProbInternal}} which must be implemented by heuristics in
   order to use them with the heuristics() wrapper function.
}

